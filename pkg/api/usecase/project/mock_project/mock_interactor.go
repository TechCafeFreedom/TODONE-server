// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/api/usecase/project/interactor.go

// Package mock_project is a generated GoMock package.
package mock_project

import (
	reflect "reflect"
	models "todone/db/mysql/models"

	gin "github.com/gin-gonic/gin"
	gomock "github.com/golang/mock/gomock"
)

// MockInteractor is a mock of Interactor interface
type MockInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockInteractorMockRecorder
}

// MockInteractorMockRecorder is the mock recorder for MockInteractor
type MockInteractorMockRecorder struct {
	mock *MockInteractor
}

// NewMockInteractor creates a new mock instance
func NewMockInteractor(ctrl *gomock.Controller) *MockInteractor {
	mock := &MockInteractor{ctrl: ctrl}
	mock.recorder = &MockInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInteractor) EXPECT() *MockInteractorMockRecorder {
	return m.recorder
}

// CreateNewProject mocks base method
func (m *MockInteractor) CreateNewProject(context *gin.Context, title, description string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewProject", context, title, description)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNewProject indicates an expected call of CreateNewProject
func (mr *MockInteractorMockRecorder) CreateNewProject(context, title, description interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewProject", reflect.TypeOf((*MockInteractor)(nil).CreateNewProject), context, title, description)
}

// SelectAll mocks base method
func (m *MockInteractor) SelectAll() ([]*models.Project, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectAll")
	ret0, _ := ret[0].([]*models.Project)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectAll indicates an expected call of SelectAll
func (mr *MockInteractorMockRecorder) SelectAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectAll", reflect.TypeOf((*MockInteractor)(nil).SelectAll))
}
